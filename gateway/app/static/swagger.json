{
  "openapi": "3.0.0",
  "info": {
    "title": "Microservice Book Store",
    "description": "Implementasi Swagger pada Aplikasi Microservice dengan Flask Menggunakan Studi Case Book Store",
    "version": "1.0.0",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },

  "tags": [{
    "name": "Book Api",
    "description": "Book Api"
  }],

  "servers": [{
    "url": "/"
  }],

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "publisher": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          },
          "is_available": {
            "type": "boolean"
          }
        }
      },
      "Id": {
        "type": "integer",
        "properties": {
          "name": {
            "type": "integer"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code" : {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      }
    }
  },

  "paths": {
    "/master/books": {
      "get": {
        "security": {
          "bearerAuth": []
        },
        "tags": [
          "Book"
        ],
        "summary": "Get All Books",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "schema": {
              "$ref": "#/components/responses/UnauthorizedError"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          }
        }
      },

      "post": {
        "security": {
          "bearerAuth": []
        },
        "tags": [
          "Book"
        ],
        "summary": "Store Book",
        "requestBody": {
          "description": "Add New Book To Database",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "schema": {
              "$ref": "#/components/responses/UnauthorizedError"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          }
        }
      }
    },

    "/master/books/{id}": {
      "get": {
        "security": {
          "bearerAuth": []
        },
        "tags": [
          "Book"
        ],
        "summary": "Get Book",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Get Book Detail By Id",
          "required": true,
          "type": "integer",
          "schema": {
            "$ref": "#/components/schemas/Id"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "schema": {
              "$ref": "#/components/responses/UnauthorizedError"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          }
        }
      },

      "put": {
        "security": {
          "bearerAuth": []
        },
        "tags": [
          "Book"
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Book id to update",
          "required": true,
          "type": "integer",
          "schema": {
            "$ref": "#/components/schemas/Id"
          }
        }],
        "summary": "Update Book",
        "requestBody": {
          "description": "Update Existing Book On Database",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "schema": {
              "$ref": "#/components/responses/UnauthorizedError"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          }
        }
      },

      "delete": {
        "security": {
          "bearerAuth": []
        },
        "tags": [
          "Book"
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Book id to delete",
          "required": true,
          "type": "integer",
          "schema": {
            "$ref": "#/components/schemas/Id"
          }
        }],
        "summary": "Delete Book",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "schema": {
              "$ref": "#/components/responses/UnauthorizedError"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          }
        }
      }
    }

  }
}